/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package noteblock_java;

/**
 *
 * @author Lukas
 */
public class ControlPanel extends javax.swing.JFrame {

    /**
     *
     */
    private static final long serialVersionUID = 4747409654228885372L;
    private boolean reading;
    private boolean mOut;
    private final ReadSerial reader;
    private final MidiControl midi;
    private boolean debug;

    /**
     * Creates new form ControlPanel
     */
    public ControlPanel() {
        initComponents();
        reader = new ReadSerial();
        reading = false;
        midi = new MidiControl();
        mOut = false;
        debug = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        programGroup = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        selectPort = new javax.swing.JComboBox();
        readFileButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        lblSelectPort = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        midiSelect = new javax.swing.JComboBox();
        midiOutButton = new javax.swing.JButton();
        stopMidi = new javax.swing.JButton();
        cubePanel = new javax.swing.JPanel();
        soundButton = new javax.swing.JButton();
        prog1 = new javax.swing.JRadioButton();
        prog2 = new javax.swing.JRadioButton();
        prog3 = new javax.swing.JRadioButton();
        debugButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Noteblock Control Panel");

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTitle.setText("Noteblock Control Panel");

        selectPort.setModel(ReadSerial.getPorts());

        readFileButton.setText("Read To File");
        readFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readFileButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop Reading");
        stopButton.setEnabled(false);
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        lblSelectPort.setText("Select a Port: ");

        jLabel1.setText("Select an Output");

        midiSelect.setModel(MidiControl.getOuts());

        midiOutButton.setText("Start Midi Out");
        midiOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                midiOutButtonActionPerformed(evt);
            }
        });

        stopMidi.setText("Stop Midi");
        stopMidi.setEnabled(false);
        stopMidi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopMidiActionPerformed(evt);
            }
        });

        cubePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Cube Controls"));
        cubePanel.setName("test"); // NOI18N

        soundButton.setText("Cube Sound On/Off");
        soundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soundButtonActionPerformed(evt);
            }
        });

        programGroup.add(prog1);
        prog1.setSelected(true);
        prog1.setText("Program 1");
        prog1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prog1ActionPerformed(evt);
            }
        });

        programGroup.add(prog2);
        prog2.setText("Program 2");
        prog2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prog2ActionPerformed(evt);
            }
        });

        programGroup.add(prog3);
        prog3.setText("Program 3");
        prog3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prog3ActionPerformed(evt);
            }
        });

        debugButton.setText("Debug Mode");
        debugButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debugButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cubePanelLayout = new javax.swing.GroupLayout(cubePanel);
        cubePanel.setLayout(cubePanelLayout);
        cubePanelLayout.setHorizontalGroup(
            cubePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cubePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cubePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(soundButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(debugButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(cubePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prog3)
                    .addComponent(prog2)
                    .addComponent(prog1))
                .addGap(36, 36, 36))
        );
        cubePanelLayout.setVerticalGroup(
            cubePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cubePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(soundButton)
                .addGap(18, 18, 18)
                .addComponent(debugButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(cubePanelLayout.createSequentialGroup()
                .addComponent(prog1)
                .addGap(18, 18, 18)
                .addComponent(prog2)
                .addGap(18, 18, 18)
                .addComponent(prog3)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblSelectPort)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblTitle)
                            .addComponent(selectPort, 0, 158, Short.MAX_VALUE)
                            .addComponent(midiSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(readFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(midiOutButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(stopButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(stopMidi, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cubePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSelectPort)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(readFileButton)
                    .addComponent(stopButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(midiSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(midiOutButton)
                    .addComponent(stopMidi))
                .addGap(18, 18, 18)
                .addComponent(cubePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void readFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readFileButtonActionPerformed
            stopButton.setEnabled(true);
            readFileButton.setEnabled(false);
            reader.setPort((String) selectPort.getModel().getSelectedItem());
            reading = true;
            new Thread() {
                @Override
                public void run() {
                    while (reading) {
                        reader.pollPort();
                    }
                }
            }.start();


	}//GEN-LAST:event_readFileButtonActionPerformed

	private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
            stopButton.setEnabled(false);
            readFileButton.setEnabled(true);
            reading = false;
            if (!mOut) {
                reader.closePort();
            }
	}//GEN-LAST:event_stopButtonActionPerformed

	private void midiOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_midiOutButtonActionPerformed
            midi.selectOut((String) midiSelect.getSelectedItem());
            reader.setPort((String) selectPort.getModel().getSelectedItem());
            midiOutButton.setEnabled(false);
            stopMidi.setEnabled(true);
            mOut = true;
            new Thread() {
                @Override
                public void run() {
                    while (mOut) {
                        reader.sendMidi(midi);
                    }
                }
            }.start();

	}//GEN-LAST:event_midiOutButtonActionPerformed

    private void stopMidiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopMidiActionPerformed
        stopMidi.setEnabled(false);
        midiOutButton.setEnabled(true);
        mOut = false;
        if (!reading) {
            reader.closePort();
        }
    }//GEN-LAST:event_stopMidiActionPerformed

    private void soundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soundButtonActionPerformed
        if (!reader.isOpen()) {
            reader.setPort((String) selectPort.getModel().getSelectedItem());
            reader.soundSwitch();
            reader.closePort();
        } else {
            reader.soundSwitch();
        }
    }//GEN-LAST:event_soundButtonActionPerformed

    private void prog1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prog1ActionPerformed
        if (prog1.isSelected()) {
            if (!reader.isOpen()) {
                reader.setPort((String) selectPort.getModel().getSelectedItem());
                reader.setProg(1);
                reader.closePort();
            } else {
                reader.setProg(1);
            }
        }
    }//GEN-LAST:event_prog1ActionPerformed

    private void prog2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prog2ActionPerformed
        if (prog2.isSelected()) {
            if (!reader.isOpen()) {
                reader.setPort((String) selectPort.getModel().getSelectedItem());
                reader.setProg(2);
                reader.closePort();
            } else {
                reader.setProg(2);
            }
        }
    }//GEN-LAST:event_prog2ActionPerformed

    private void prog3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prog3ActionPerformed
        if (prog3.isSelected()) {
            if (!reader.isOpen()) {
                reader.setPort((String) selectPort.getModel().getSelectedItem());
                reader.setProg(3);
                reader.closePort();
            } else {
                reader.setProg(3);
            }
        }
    }//GEN-LAST:event_prog3ActionPerformed

    private void debugButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debugButtonActionPerformed
        boolean open = reader.isOpen();
        if (!open){
            reader.setPort((String) selectPort.getModel().getSelectedItem());
        }
        if(debug){
            reader.runMode();
            debugButton.setText("Debug Mode");
            debug = false;
        }else{
            reader.debugMode();
            debugButton.setText("Run Mode");
            debug = true;
        }
        if(!open){
            reader.closePort();
        }
    }//GEN-LAST:event_debugButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
		//</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ControlPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel cubePanel;
    private javax.swing.JButton debugButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblSelectPort;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JButton midiOutButton;
    private javax.swing.JComboBox midiSelect;
    private javax.swing.JRadioButton prog1;
    private javax.swing.JRadioButton prog2;
    private javax.swing.JRadioButton prog3;
    private javax.swing.ButtonGroup programGroup;
    private javax.swing.JButton readFileButton;
    private javax.swing.JComboBox selectPort;
    private javax.swing.JButton soundButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JButton stopMidi;
    // End of variables declaration//GEN-END:variables
}
